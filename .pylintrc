[MASTER]
# Add any Python module names here where you want to disable all warnings.
ignore=CVS

# Files or directories to be skipped. They should be base names, not paths.
ignore-patterns=

# Python code to execute, usually for sys.path manipulation such as
# pygtk.require().
#init-hook=

# Use multiple processes to speed up Pylint.
jobs=1

# List of plugins (as comma separated values of python modules names) to load,
# usually to register additional checkers.
load-plugins=

# Pickle collected data for later comparisons.
persistent=yes

# When enabled, pylint would attempt to guess common misconfiguration and emit
# user-friendly hints instead of false-positive error messages.
suggestion-mode=yes

# Allow loading of arbitrary C extensions. Extensions are imported into the
# active Python interpreter and may run arbitrary code.
unsafe-load-any-extension=no

[MESSAGES CONTROL]
# Only show warnings with the listed confidence levels. Leave empty to show
# all. Valid levels: HIGH, INFERENCE, INFERENCE_FAILURE, UNDEFINED.
confidence=

# Disable the message, report, category or checker with the given id(s). You
# can either give multiple identifiers separated by comma (,) or put this
# option multiple times (only on the command line, not in the configuration
# file where it should appear only once).
disable=C0111,  # missing-docstring
        C0103,  # invalid-name
        R0903,  # too-few-public-methods
        W0511,  # fixme
        W0621,  # redefined-outer-name
        R0913,  # too-many-arguments
        R0914,  # too-many-locals
        W0703,  # broad-except
        C0301,  # line-too-long (we use black for this)
        C0302,  # too-many-lines
        R0902,  # too-many-instance-attributes
        R0904,  # too-many-public-methods
        R0912,  # too-many-branches
        R0915,  # too-many-statements
        W0212,  # protected-access
        W0221,  # arguments-differ
        W0223,  # abstract-method
        W0603,  # global-statement
        W0613,  # unused-argument
        W0622,  # redefined-builtin
        W0702,  # bare-except
        W0707,  # raise-missing-from

# Enable the message, report, category or checker with the given id(s). You can
# either give multiple identifier separated by comma (,) or put this option
# multiple time (only on the command line, not in the configuration file where
# it should appear only once).
enable=c-extension-no-member

[FORMAT]
# Maximum number of characters on a single line.
max-line-length=100

# Maximum number of lines in a module.
max-module-lines=1000

# String used as indentation unit. This is usually "    " (4 spaces) or "\t" (1 tab).
indent-string='    '

[BASIC]
# Good variable names which should always be accepted, separated by a comma.
good-names=i,j,k,ex,Run,_,fd,fp,id,T,x,y,z,w,h

# Regular expression which should only match function or class names that do
# not require a docstring.
no-docstring-rgx=^_

# Minimum line length for functions/classes that require docstrings, shorter
# ones are exempt.
docstring-min-length=10

[TYPECHECK]
# List of module names for which member attributes should not be checked
# (useful for modules/projects where namespaces are manipulated during runtime
# and thus existing member attributes cannot be deduced by static analysis).
ignored-modules=numpy,torch,tensorflow,cv2,PIL

# List of class names for which member attributes should not be checked
ignored-classes=SQLObject,optparse.Values,thread._local,_thread._local

# List of members which are set dynamically and missed by pylint inference
# system, and so shouldn't trigger E1101 when accessed.
generated-members=numpy.*,torch.*,cv2.*

[MISCELLANEOUS]
# List of note tags to take into consideration, separated by a comma.
notes=FIXME,XXX,TODO

[SIMILARITIES]
# Minimum lines number of a similarity.
min-similarity-lines=4

# Ignore comments when computing similarities.
ignore-comments=yes

# Ignore docstrings when computing similarities.
ignore-docstrings=yes

# Ignore imports when computing similarities.
ignore-imports=yes

[IMPORTS]
# Allow wildcard imports from modules that define __all__.
allow-wildcard-with-all=no

# Analyse import fallback blocks. This can be used to support both Python 2 and
# 3 compatible code, which means that the block might have code that exists
# only in one or another interpreter, leading to false positives when analysed.
analyse-fallback-blocks=no

# Force import order to recognize a module as part of the standard
# compatibility libraries.
known-standard-library=

# Force import order to recognize a module as part of a third party library.
known-third-party=enchant

# Couples of modules and preferred modules, separated by a comma.
preferred-modules=

[DESIGN]
# Maximum number of arguments for function / method.
max-args=7

# Maximum number of locals for function / method body.
max-locals=15

# Maximum number of return / yield for function / method body.
max-returns=6

# Maximum number of branch for function / method body.
max-branches=12

# Maximum number of statements in function / method body.
max-statements=50

# Maximum number of parents for a class (see R0901).
max-parents=7

# Maximum number of attributes for a class (see R0902).
max-attributes=7

# Minimum number of public methods for a class (see R0903).
min-public-methods=1

# Maximum number of public methods for a class (see R0904).
max-public-methods=20

[CLASSES]
# List of method names used to declare (i.e. assign) instance attributes.
defining-attr-methods=__init__,__new__,setUp

# List of valid names for the first argument in a class method.
valid-classmethod-first-arg=cls

# List of valid names for the first argument in a metaclass class method.
valid-metaclass-classmethod-first-arg=mcs

# List of member names, which should be excluded from the protected access
# warning.
exclude-protected=_asdict,_fields,_replace,_source,_make

[EXCEPTIONS]
# Exceptions that will emit a warning when being caught. Defaults to
# "Exception"
overgeneral-exceptions=builtins.Exception
